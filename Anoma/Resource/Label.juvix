module Anoma.Resource.Label;

import Stdlib.Prelude open;
import Anoma.Utils open using {Ref; mkRef};
import Anoma.Resource.Types open using {Label; LabelRef; module LabelRef; mkLabelRef};

--- Computes the ;LabelRef; from the ;Label; record.
--- NOTE: For the private testnet, this is allowed to be the identity function.
labelToRef (label : Label) : LabelRef := mkLabelRef label;

--- Fetches the ;Label; from the ;LabelRef; function.
--- NOTE: For the private testnet, this is allowed to be the identity function.
labelFromRef (labelRef : LabelRef) : Label := LabelRef.unLabelRef labelRef;

--- Implements the ;Ref; trait for ;Label;.
instance
Label-Ref : Ref Label LabelRef :=
  mkRef@{
    toRef := labelToRef;
    fromRef := labelFromRef
  };
