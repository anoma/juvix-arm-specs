module Anoma.Resource.Types;

import Stdlib.Prelude open using {Bool} public;

--- A fixed-size data type encoding the reference to the resource logic function.
--- NOTE: For the private testnet, the requirement can be relaxed by allowing ;LogicRef; to be dynamically-sized.
axiom LogicRef : Type;

--- A fixed-size data type encoding the reference to the resource label record.
--- NOTE: For the private testnet, the requirement can be relaxed by allowing ;LabelRef; to be dynamically-sized.
axiom LabelRef : Type;

--- A fixed-size data type encoding the reference to the resource value record.
--- NOTE: For the private testnet, the requirement can be relaxed by allowing ;ValueRef; to be dynamically-sized.
axiom ValueRef : Type;

axiom Quantity : Type;

axiom NullifierKeyCommitment : Type;

axiom Nonce : Type;

axiom RandSeed : Type;

type Resource :=
  mkResource {
    logicRef : LogicRef;
    labelRef : LabelRef;
    valueRef : ValueRef;
    quantity : Quantity;
    ephemerality : Bool;
    nullifierKeyCommitment : NullifierKeyCommitment;
    nonce : Nonce;
    randSeed : RandSeed
  };

--- Provides a function calculating a fixed-size ;RefType; from a dynamically sized ;DataType;.
--- For the private testnet, the requirement can be relaxed by allowing ;RefType; to be dynamically-sized.
trait
type Ref DataType RefType := mkRef {ref : DataType -> RefType};
