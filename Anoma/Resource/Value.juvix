module Anoma.Resource.Value;

import Stdlib.Prelude open;
import Anoma.Utils open using {Ref; mkRef};
import Anoma.Resource.Types open using {Value; ValueRef; module ValueRef; mkValueRef};

--- Computes the ;ValueRef; from the ;Value; record.
--- NOTE: For the private testnet, this is allowed to be the identity function.
valueToRef (value : Value) : ValueRef := mkValueRef value;

--- Fetches the ;Value; from the ;ValueRef; function.
valueFromRef (valueRef : ValueRef) : Value := ValueRef.unValueRef valueRef;

--- Implements the ;Ref; trait for ;Value;.
instance
Value-Ref : Ref Value ValueRef :=
  mkRef@{
    toRef := valueToRef;
    fromRef := valueFromRef
  };
