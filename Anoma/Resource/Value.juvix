module Anoma.Resource.Value;

import Stdlib.Prelude open;
import Anoma.Utils open using {Ref; mkRef};
import Anoma.Resource.Types open using {Value; module Value; ValueRef; mkValueRef};

--- Computes the ;ValueRef; from the ;Value; record.
--- NOTE: For the private testnet, this is allowed to be the identity function.
--- TODO This should be an Anoma builtin.
valueRef (value : Value) : ValueRef := value |> Value.unValue |> mkValueRef;

--- Implements the ;Ref; trait for ;Value;.
instance
Value-Ref : Ref Value ValueRef := mkRef valueRef;
