module Anoma.Resource.Value;

import Stdlib.Prelude open;
import Anoma.Utils open using {Ref; mkRef};
import Anoma.Resource.Types open using {Value; module Value; mkValue; ValueRef; module ValueRef; mkValueRef};
import Anoma.Utils open using {MISSING_JUVIX_IMPLEMENTATION};

--- Computes the ;ValueRef; from the ;Value; record.
valueToRef (value : Value) : ValueRef := MISSING_JUVIX_IMPLEMENTATION;

--- Fetches the ;Value; from the ;ValueRef; function.
valueFromRef (valueRef : ValueRef) : Value := MISSING_JUVIX_IMPLEMENTATION;

--- Implements the ;Ref; trait for ;Value;.
instance
Value-Ref : Ref Value ValueRef :=
  mkRef@{
    toRef := valueToRef;
    fromRef := valueFromRef
  };
