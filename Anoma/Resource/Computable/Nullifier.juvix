module Anoma.Resource.Computable.Nullifier;

import Stdlib.Prelude open;
import Stdlib.Trait.Ord.Eq open using {fromOrdToEq};
import Data.Set as Set open using {Set};
import Anoma.Resource.Types open using {Nullifier; NullifierKey};
import Anoma.Resource.Object open using {Resource};

--- Computes the ;Nullifier; of a ;Resource; given a ;NullifierKey;.
axiom nullifier : (resource : Resource) -> (nullifierKey : NullifierKey) -> Nullifier;

module NullfierInternal;
  --- Compares two ;Nullifier; and returns their ;Ordering;.
  axiom compare : (lhs rhs : Nullifier) -> Ordering;

  --- Implements the ;Ord; trait for ;Nullifier;.
  instance
  Nullifier-Ord : Ord Nullifier := mkOrd compare;

  --- Implements the ;Eq; trait for ;Nullifier;.
  instance
  Nullifier-Eq : Eq Nullifier := fromOrdToEq;
end;
