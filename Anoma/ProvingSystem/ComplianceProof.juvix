--- An instantiation of a proving System for compliance proofs.
module Anoma.ProvingSystem.ComplianceProof;

import Stdlib.Prelude open using {Bool};
import Anoma.ProvingSystem.Types as Parametrized;

axiom Proof : Type;

axiom VerifyingKey : Type;

axiom ProvingKey : Type;

--- NOTE: CommitmentTree.Root will be contained in the instance.
axiom Instance : Type;

axiom Witness : Type;

ProofRecord : Type := Parametrized.ProofRecord Proof VerifyingKey Witness;

axiom prove : (provingKey : ProvingKey)
  -> (publicInputs : Instance)
  -> (privateInputs : Witness)
  -> Proof;

axiom verify : (proofRecord : ProofRecord) -> Bool;

instance
Compliance-ProvingSystem
  : Parametrized.ProvingSystem Proof VerifyingKey ProvingKey Witness Instance :=
  Parametrized.mkProvingSystem@{
    prove;
    verify
  };
