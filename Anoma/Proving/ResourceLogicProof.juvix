--- An instantiation of a proving System for resource logic proofs.
module Anoma.Proving.ResourceLogicProof;

import Stdlib.Prelude open;
import Anoma.Proving.Types as Parametrized open using {module ResourceLogic};
import Anoma.Proving.System as Parametrized open using {ProvingSystem};
import Anoma.Utils open using {NOT_IMPLEMENTED};

ProofRecord : Type :=
  Parametrized.ProofRecord ResourceLogic.Proof ResourceLogic.VerifyingKey ResourceLogic.Witness;

--- TODO This should be an Anoma builtin.
prove
  (provingKey : ResourceLogic.ProvingKey)
  (publicInputs : ResourceLogic.Instance)
  (privateInputs : ResourceLogic.Witness)
  : ResourceLogic.Proof := NOT_IMPLEMENTED;

--- TODO This should be an Anoma builtin.
verify (proofRecord : ProofRecord) : Bool := NOT_IMPLEMENTED;

instance
ResourceLogic-ProvingSystem
  : Parametrized.ProvingSystem
    ResourceLogic.Proof
    ResourceLogic.VerifyingKey
    ResourceLogic.ProvingKey
    ResourceLogic.Instance
    ResourceLogic.Witness :=
  Parametrized.mkProvingSystem@{
    prove;
    verify
  };
