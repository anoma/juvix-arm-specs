module Anoma.Transaction.Metadata;

import Stdlib.Prelude open;
import Anoma.Transaction.Object as Transaction open using {Transaction};
import Anoma.Transaction.Preference as Preference open using {Preference; composePreferences};
import Anoma.Transaction.InformationFlow open using {InformationFlowControlPredicate};
import Anoma.Utils open using {NOT_REQUIRED};

--- The metadata that can be associated with a ;Transaction;.
--- The metadata that can used by actors to identify preferrable ;Transaction;s and specify information flow control properties.
type Metadata :=
  mkMetadata {
    preference : Preference;
    informationFlowControlPredicate : InformationFlowControlPredicate
  };

--- A composite structure containing a ;Transaction; with ;Metadata;
type TransactionWithMetadata :=
  createWithMetadata {
    transaction : Transaction;
    metadata : Metadata
  };

--- Composes two ;TransactionWithMetadata; objects.
composeTransactionsWithMetadata (txwm1 txwm2 : TransactionWithMetadata) : TransactionWithMetadata :=
  NOT_REQUIRED;

--- Verifies a ;TransactionWithMetadata;.
verifyTransactionWithMetadata (txwm : TransactionWithMetadata) : Bool := NOT_REQUIRED;
