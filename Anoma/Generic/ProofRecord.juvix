module Anoma.Generic.ProofRecord;

import Stdlib.Prelude open;
import Stdlib.Data.Set as Set open using {Set};

import Anoma.Compliance.Types as Compliance;
import Anoma.Logic.Types as Logic;
import Anoma.Delta.Types as Delta;
import Anoma.Utils open;

--- A wrapper type for all of the supported proof record types.
type ProofRecord :=
  | ComplianceProofRecord Compliance.ProofRecord
  | LogicProofRecord Logic.ProofRecord
  | DeltaProofRecord Delta.ProofRecord;

deriving instance
ProofRecord-Ord : Ord ProofRecord;

deriving instance
ProofRecord-Eq : Eq ProofRecord;

--- NOTE: At verification time, a proof record set must contain exactly one ;Delta.ProofRecord;.
verifyProofRecords (proofRecords : Set ProofRecord) : Bool :=
  STILL_MISSING_ANOMA_BUILTIN;
