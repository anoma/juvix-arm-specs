module Anoma.Identity.Internal;

import Stdlib.Prelude open;
import Stdlib.Trait.Ord.Eq open using {fromOrdToEq};
import Anoma.Utils open using {MISSING_DEFINITION; MISSING_ANOMA_BUILTIN};

--- A fixed-size data type describing an internal identity.
type InternalIdentity := mkInternalIdentity {unInternalIdentity : MISSING_DEFINITION};

module InternalIdentityInternal;
  --- Compares two ;InternalIdentity; objects.
  compare (lhs rhs : InternalIdentity) : Ordering := MISSING_ANOMA_BUILTIN;

  --- Implements the ;Ord; trait for ;InternalIdentity;.
  instance
  InternalIdentity-Ord : Ord InternalIdentity := mkOrd compare;

  --- Implements the ;Eq; trait for ;InternalIdentity;.
  instance
  InternalIdentity-Eq : Eq InternalIdentity := fromOrdToEq;
end;
