module Anoma.State.ResourceMachine;

import Stdlib.Prelude open using {Bool};
import Anoma.Transaction.Index as Transaction open using {Transaction};

--- The interface of the resource machine.
trait
type ResourceMachine :=
  mkResourceMachine {
    --- Creates a ;Transaction; with the the ;Transaction.Constructor;.
    --- TODO Clarify why `create` is needed.
    create : Transaction.Constructor;

    --- Composes two ;Transaction;s with the transa
    compose : (tx1 tx2 : Transaction) -> Transaction;

    --- Verifies a ;Transaction; by checking that the
    --- - resource logic proofs
    --- - compliance proofs
    --- - delta proof (a.k.a., balance proof)
    --- is valid.
    verify : (tx : Transaction) -> Bool
  };
